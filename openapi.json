{
  "openapi": "3.1.0",
  "info": {
    "title": "Frate Returns API",
    "version": "0.1.0"
  },
  "servers": [
    {
      "url": "/api"
    }
  ],
  "paths": {
    "/v1/returns-groups": {
      "get": {
        "summary": "Zowie Return Groups",
        "description": "Return Groups",
        "operationId": "zowie_return_groups_v1_returns_groups_get",
        "deprecated": true,
        "parameters": [
          {
            "name": "return_group_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Return Group Id"
            }
          },
          {
            "name": "email",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Email"
            }
          },
          {
            "name": "order_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Order Id"
            }
          },
          {
            "name": "order_name",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Order Name"
            }
          },
          {
            "name": "min_created_at",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Min Created At"
            }
          },
          {
            "name": "max_created_at",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Max Created At"
            }
          },
          {
            "name": "min_updated_at",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Min Updated At"
            }
          },
          {
            "name": "max_updated_at",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Max Updated At"
            }
          },
          {
            "name": "min_shipped_at",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Min Shipped At"
            }
          },
          {
            "name": "max_shipped_at",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Max Shipped At"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Limit"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Offset"
            }
          },
          {
            "name": "x-frate-api-token",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-Frate-Api-Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ZowieReturnGroupSerializer"
                  },
                  "title": "Response Zowie Return Groups V1 Returns Groups Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/returns-groups/{return_group_id}/process": {
      "post": {
        "summary": "Zowie Process Return Group",
        "description": "Process Return Group",
        "operationId": "zowie_process_return_group_v1_returns_groups__return_group_id__process_post",
        "deprecated": true,
        "parameters": [
          {
            "name": "return_group_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Return Group Id"
            }
          },
          {
            "name": "x-frate-api-token",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-Frate-Api-Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MessageResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/returns-groups/{return_group_id}/cancel": {
      "post": {
        "summary": "Zowie Cancel Return Group",
        "description": "Cancel Return Group",
        "operationId": "zowie_cancel_return_group_v1_returns_groups__return_group_id__cancel_post",
        "deprecated": true,
        "parameters": [
          {
            "name": "return_group_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Return Group Id"
            }
          },
          {
            "name": "x-frate-api-token",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-Frate-Api-Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MessageResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/returns-groups/{return_group_id}/complete": {
      "post": {
        "summary": "Zowie Complete Return Group",
        "description": "Complete Return Group",
        "operationId": "zowie_complete_return_group_v1_returns_groups__return_group_id__complete_post",
        "deprecated": true,
        "parameters": [
          {
            "name": "return_group_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Return Group Id"
            }
          },
          {
            "name": "x-frate-api-token",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-Frate-Api-Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MessageResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/returns-groups/{return_group_id}/flag": {
      "post": {
        "summary": "Zowie Flag Return Group",
        "description": "Flag Return Group",
        "operationId": "zowie_flag_return_group_v1_returns_groups__return_group_id__flag_post",
        "deprecated": true,
        "parameters": [
          {
            "name": "return_group_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Return Group Id"
            }
          },
          {
            "name": "x-frate-api-token",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-Frate-Api-Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MessageResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v2/allowlist-items": {
      "get": {
        "tags": [
          "allowlist-items"
        ],
        "summary": "List Allowlist Items",
        "description": "List AllowlistItems",
        "operationId": "list_allowlist_items_v2_allowlist_items_get",
        "parameters": [
          {
            "name": "after",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "After"
            }
          },
          {
            "name": "before",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Before"
            }
          },
          {
            "name": "order",
            "in": "query",
            "required": false,
            "schema": {
              "enum": [
                "DESC",
                "ASC"
              ],
              "type": "string",
              "default": "DESC",
              "title": "Order"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "x-frate-api-token",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-Frate-Api-Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AllowlistItemListSerializer"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "allowlist-items"
        ],
        "summary": "Create Allowlist Item",
        "description": "Create AllowlistItem",
        "operationId": "create_allowlist_item_v2_allowlist_items_post",
        "parameters": [
          {
            "name": "x-frate-api-token",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-Frate-Api-Token"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AllowlistItemCreateSerializer"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AllowlistItemSerializer"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v2/allowlist-items/{allowlist_item_id}": {
      "delete": {
        "tags": [
          "allowlist-items"
        ],
        "summary": "Delete Allowlist Item",
        "description": "Delete AllowlistItem",
        "operationId": "delete_allowlist_item_v2_allowlist_items__allowlist_item_id__delete",
        "parameters": [
          {
            "name": "allowlist_item_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Allowlist Item Id"
            }
          },
          {
            "name": "x-frate-api-token",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-Frate-Api-Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v2/deep-links": {
      "post": {
        "summary": "Deep Links",
        "description": "Public API deep links",
        "operationId": "deep_links_v2_deep_links_post",
        "parameters": [
          {
            "name": "x-frate-api-token",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-Frate-Api-Token"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeepLinkCreateSerializer"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeepLinkSerializer"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v2/return-groups": {
      "get": {
        "summary": "Return Groups",
        "description": "Public API return groups endpoint",
        "operationId": "return_groups_v2_return_groups_get",
        "parameters": [
          {
            "name": "return_group_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Return Group Id"
            }
          },
          {
            "name": "email",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Email"
            }
          },
          {
            "name": "order_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Order Id"
            }
          },
          {
            "name": "order_name",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Order Name"
            }
          },
          {
            "name": "min_created_at",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Min Created At"
            }
          },
          {
            "name": "max_created_at",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Max Created At"
            }
          },
          {
            "name": "min_updated_at",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Min Updated At"
            }
          },
          {
            "name": "max_updated_at",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Max Updated At"
            }
          },
          {
            "name": "min_shipped_at",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Min Shipped At"
            }
          },
          {
            "name": "max_shipped_at",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Max Shipped At"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Limit"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Offset"
            }
          },
          {
            "name": "x-frate-api-token",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-Frate-Api-Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReturnGroupSerializer"
                  },
                  "title": "Response Return Groups V2 Return Groups Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v2/submit-return-group-review": {
      "post": {
        "summary": "Submit Return Group Review",
        "description": "Public API submit return group review endpoint",
        "operationId": "submit_return_group_review_v2_submit_return_group_review_post",
        "parameters": [
          {
            "name": "x-frate-api-token",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-Frate-Api-Token"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubmitReturnGroupReviewInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReturnLineItemSerializer"
                  },
                  "title": "Response Submit Return Group Review V2 Submit Return Group Review Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v2/return-groups/{return_group_id}/emails": {
      "post": {
        "summary": "Resend Email",
        "description": "Public API resend email for return group endpoint",
        "operationId": "resend_email_v2_return_groups__return_group_id__emails_post",
        "parameters": [
          {
            "name": "return_group_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Return Group Id"
            }
          },
          {
            "name": "x-frate-api-token",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-Frate-Api-Token"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResendEmailInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v2/shipments/{shipment_id}": {
      "get": {
        "summary": "Get Shipment",
        "description": "Get Shipment",
        "operationId": "get_shipment_v2_shipments__shipment_id__get",
        "parameters": [
          {
            "name": "shipment_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Shipment Id"
            }
          },
          {
            "name": "x-frate-api-token",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-Frate-Api-Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShipmentSerializer"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update Shipment",
        "description": "Update Shipment",
        "operationId": "update_shipment_v2_shipments__shipment_id__put",
        "parameters": [
          {
            "name": "shipment_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Shipment Id"
            }
          },
          {
            "name": "x-frate-api-token",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-Frate-Api-Token"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ShipmentUpdateSerializer"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShipmentSerializer"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AddressSerializer": {
        "properties": {
          "address1": {
            "type": "string",
            "title": "Address1",
            "description": "The first line of the address"
          },
          "address2": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Address2",
            "description": "The second line of the address"
          },
          "city": {
            "type": "string",
            "title": "City",
            "description": "The city of the address"
          },
          "province": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Province",
            "description": "The province of the address"
          },
          "zip": {
            "type": "string",
            "title": "Zip",
            "description": "The zip code of the address"
          },
          "country": {
            "type": "string",
            "title": "Country",
            "description": "The country of the address"
          }
        },
        "type": "object",
        "required": [
          "address1",
          "city",
          "province",
          "zip",
          "country"
        ],
        "title": "Address",
        "description": "Address"
      },
      "AllowedActionsEnum": {
        "type": "string",
        "enum": [
          "EXCHANGE",
          "REFUND_ORIGINAL_PAYMENT_METHOD",
          "REFUND_STORE_CREDIT"
        ],
        "title": "AllowedActionsEnum",
        "description": "Allowlist item allowed actions enum."
      },
      "AllowedActionsSerializer": {
        "properties": {
          "actions": {
            "items": {
              "$ref": "#/components/schemas/AllowedActionsEnum"
            },
            "type": "array",
            "title": "Actions",
            "default": [
              "EXCHANGE",
              "REFUND_ORIGINAL_PAYMENT_METHOD",
              "REFUND_STORE_CREDIT"
            ]
          }
        },
        "type": "object",
        "title": "AllowedActionsSerializer"
      },
      "AllowlistItemCreateSerializer": {
        "properties": {
          "value": {
            "type": "string",
            "minLength": 1,
            "title": "Value"
          },
          "description": {
            "type": "string",
            "title": "Description",
            "default": ""
          }
        },
        "type": "object",
        "required": [
          "value"
        ],
        "title": "AllowlistItemCreate",
        "description": "AllowlistItemCreate Serializer\n\nTODO: Add `item_type` when we support multiple item types"
      },
      "AllowlistItemListSerializer": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/AllowlistItemSerializer"
            },
            "type": "array",
            "title": "Items"
          },
          "page_info": {
            "$ref": "#/components/schemas/PageInfoSerializer"
          }
        },
        "type": "object",
        "required": [
          "items",
          "page_info"
        ],
        "title": "AllowlistItemList",
        "description": "AllowlistItemList Serializer"
      },
      "AllowlistItemSerializer": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "value": {
            "type": "string",
            "title": "Value"
          },
          "description": {
            "type": "string",
            "title": "Description",
            "default": ""
          },
          "created_at": {
            "type": "string",
            "title": "Created At"
          },
          "allowed_actions": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/AllowedActionsSerializer"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "id",
          "value",
          "created_at",
          "allowed_actions"
        ],
        "title": "AllowlistItem",
        "description": "AllowlistItem Serializer"
      },
      "CreditMethodEnum": {
        "type": "string",
        "enum": [
          "STORE_CREDIT",
          "ORIGINAL_PAYMENT_METHOD"
        ],
        "title": "CreditMethodEnum"
      },
      "CurrencyCodeEnum": {
        "type": "string",
        "enum": [
          "CAD",
          "USD",
          "CNY",
          "JPY",
          "AUD",
          "SGD",
          "INR",
          "MXN",
          "EGP",
          "ZAR",
          "BRL",
          "KRW",
          "SAR",
          "ILS",
          "MNT",
          "AED",
          "PHP",
          "NZD",
          "HKD",
          "TWD",
          "NGN",
          "SLE",
          "SLL",
          "QAR",
          "MYR",
          "THB",
          "EUR",
          "GBP",
          "CHF",
          "RUB",
          "SEK",
          "UAH",
          "TRY",
          "RSD",
          "RON",
          "PLN",
          "NOK",
          "MKD",
          "MDL",
          "ISK",
          "HUF",
          "GEL",
          "DKK",
          "CZK",
          "BGN",
          "BAM",
          "BYN",
          "AZN",
          "AMD",
          "ALL"
        ],
        "title": "CurrencyCodeEnum"
      },
      "CustomerSerializer": {
        "properties": {
          "type": {
            "type": "string",
            "const": "customer",
            "title": "Type",
            "description": "The type identifier for this resource",
            "default": "customer"
          },
          "name": {
            "type": "string",
            "title": "Name",
            "description": "The customer's full name"
          },
          "email": {
            "type": "string",
            "title": "Email",
            "description": "The customer's email address"
          },
          "phone": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Phone",
            "description": "The customer's phone number"
          }
        },
        "type": "object",
        "required": [
          "name",
          "email",
          "phone"
        ],
        "title": "Customer",
        "description": "Customer"
      },
      "DeepLinkCreateSerializer": {
        "properties": {
          "order_name": {
            "type": "string",
            "title": "Order Name"
          },
          "zip_code_or_email": {
            "type": "string",
            "title": "Zip Code Or Email"
          },
          "target": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/DeepLinkTargetEnum"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "order_name",
          "zip_code_or_email"
        ],
        "title": "DeepLinkCreate",
        "description": "v2 `DeepLinkCreate` Serializer"
      },
      "DeepLinkSerializer": {
        "properties": {
          "url": {
            "type": "string",
            "title": "Url"
          }
        },
        "type": "object",
        "required": [
          "url"
        ],
        "title": "DeepLink",
        "description": "v2 `DeepLink` Serializer"
      },
      "DeepLinkTargetEnum": {
        "type": "string",
        "enum": [
          "RETURN",
          "RETURN_STATUS"
        ],
        "title": "DeepLinkTargetEnum",
        "description": "DeepLink target."
      },
      "ExchangeLineItemSerializer": {
        "properties": {
          "type": {
            "type": "string",
            "const": "exchange_line_item",
            "title": "Type",
            "description": "The type identifier for this resource",
            "default": "exchange_line_item"
          },
          "id": {
            "type": "string",
            "title": "Id",
            "description": "Unique identifier for the exchange line item"
          },
          "line_item_platform_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Line Item Platform Id",
            "description": "The line item ID from the e-commerce platform. Note: This is only set for exchanges using the exchange API once the exchange has been processed"
          },
          "product_platform_id": {
            "type": "string",
            "title": "Product Platform Id",
            "description": "The product ID from the e-commerce platform"
          },
          "product_name": {
            "type": "string",
            "title": "Product Name",
            "description": "The name of the product being exchanged"
          },
          "variant_platform_id": {
            "type": "string",
            "title": "Variant Platform Id",
            "description": "The variant ID from the e-commerce platform"
          },
          "variant_name": {
            "type": "string",
            "title": "Variant Name",
            "description": "The name of the specific variant being exchanged"
          },
          "sku": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Sku",
            "description": "The SKU (Stock Keeping Unit) of the item being exchanged"
          },
          "status": {
            "$ref": "#/components/schemas/ExchangeLineItemStatusEnum",
            "description": "The status of the exchange line item"
          },
          "quantity": {
            "type": "integer",
            "title": "Quantity",
            "description": "The quantity of items being exchanged"
          },
          "subtotal": {
            "$ref": "#/components/schemas/MoneyBag",
            "description": "The subtotal amount before discounts and taxes"
          },
          "discounted_subtotal": {
            "$ref": "#/components/schemas/MoneyBag",
            "description": "The subtotal amount after discounts but before taxes"
          },
          "tax_total": {
            "$ref": "#/components/schemas/MoneyBag",
            "description": "The total tax amount for this exchange item"
          },
          "tax_percentage": {
            "type": "number",
            "title": "Tax Percentage",
            "description": "The total tax percentage for this exchange item (expressed as a percentage, not a decimal)"
          },
          "total": {
            "$ref": "#/components/schemas/MoneyBag",
            "description": "The total amount for this exchange item (including taxes and discounts)"
          }
        },
        "type": "object",
        "required": [
          "id",
          "line_item_platform_id",
          "product_platform_id",
          "product_name",
          "variant_platform_id",
          "variant_name",
          "status",
          "quantity",
          "subtotal",
          "discounted_subtotal",
          "tax_total",
          "tax_percentage",
          "total"
        ],
        "title": "ExchangeLineItem",
        "description": "ExchangeLineItem"
      },
      "ExchangeLineItemStatusEnum": {
        "type": "string",
        "enum": [
          "UNPROCESSED",
          "PROCESSED",
          "CANCELED"
        ],
        "title": "ExchangeLineItemStatusEnum"
      },
      "ExternalEmailTypeEnum": {
        "type": "string",
        "enum": [
          "SHIP_BACK_REQUEST"
        ],
        "title": "ExternalEmailTypeEnum"
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "InternalReturnStatusEnum": {
        "type": "string",
        "enum": [
          "IN_REVIEW",
          "OPEN",
          "COMPLETED",
          "CANCELED"
        ],
        "title": "InternalReturnStatusEnum"
      },
      "MessageResponse": {
        "properties": {
          "message": {
            "type": "string",
            "title": "Message"
          }
        },
        "type": "object",
        "required": [
          "message"
        ],
        "title": "MessageResponse"
      },
      "MoneyBag": {
        "properties": {
          "shop_money": {
            "$ref": "#/components/schemas/MoneySerializer",
            "description": "The amount in the shop's currency"
          },
          "presentment_money": {
            "$ref": "#/components/schemas/MoneySerializer",
            "description": "The amount in the presentment currency"
          }
        },
        "type": "object",
        "title": "MoneyBag",
        "description": "MoneyBag"
      },
      "MoneySerializer": {
        "properties": {
          "amount": {
            "type": "number",
            "title": "Amount",
            "default": 0
          },
          "currency_code": {
            "$ref": "#/components/schemas/CurrencyCodeEnum",
            "default": "USD"
          }
        },
        "type": "object",
        "title": "MoneySerializer",
        "description": "Money"
      },
      "OrderSerializer": {
        "properties": {
          "type": {
            "type": "string",
            "const": "order",
            "title": "Type",
            "description": "The type identifier for this resource",
            "default": "order"
          },
          "id": {
            "type": "integer",
            "title": "Id",
            "description": "Unique identifier for the order"
          },
          "platform_id": {
            "type": "string",
            "title": "Platform Id",
            "description": "The order ID from the e-commerce platform (e.g., Shopify order ID)"
          },
          "name": {
            "type": "string",
            "title": "Name",
            "description": "The order name/number as displayed on the platform"
          },
          "created_at": {
            "type": "string",
            "title": "Created At",
            "description": "ISO 8601 timestamp when the order was created on the platform"
          },
          "source_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Source Name",
            "description": "The source name of the order (e.g., 'web', 'pos', 'mobile')"
          },
          "fulfilled_at": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Fulfilled At",
            "description": "ISO 8601 timestamp when the order was fulfilled"
          },
          "taxes_included": {
            "type": "boolean",
            "title": "Taxes Included",
            "description": "Whether taxes are included in the order total"
          }
        },
        "type": "object",
        "required": [
          "id",
          "platform_id",
          "name",
          "created_at",
          "taxes_included"
        ],
        "title": "Order",
        "description": "Order"
      },
      "PageInfoSerializer": {
        "properties": {
          "has_prev_page": {
            "type": "boolean",
            "title": "Has Prev Page"
          },
          "has_next_page": {
            "type": "boolean",
            "title": "Has Next Page"
          },
          "start_cursor": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Start Cursor"
          },
          "end_cursor": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "End Cursor"
          },
          "start_index": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Start Index"
          },
          "end_index": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "End Index"
          },
          "total_count": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Total Count"
          }
        },
        "type": "object",
        "required": [
          "has_prev_page",
          "has_next_page",
          "start_cursor",
          "end_cursor",
          "start_index",
          "end_index",
          "total_count"
        ],
        "title": "PageInfoSerializer",
        "description": "PageInfo Serializer"
      },
      "QuestionAnswerSerializer": {
        "properties": {
          "type": {
            "type": "string",
            "const": "question_answer",
            "title": "Type",
            "description": "The type identifier for this resource",
            "default": "question_answer"
          },
          "question_text": {
            "type": "string",
            "title": "Question Text",
            "description": "The question text"
          },
          "question_description": {
            "type": "string",
            "title": "Question Description",
            "description": "The question description"
          },
          "question_type": {
            "type": "string",
            "enum": [
              "TEXT",
              "SELECT"
            ],
            "title": "Question Type",
            "description": "The type of question"
          },
          "answers": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Answers",
            "description": "The text answer or selected options"
          }
        },
        "type": "object",
        "required": [
          "question_text",
          "question_description",
          "question_type",
          "answers"
        ],
        "title": "QuestionAnswer",
        "description": "QuestionAnswer"
      },
      "RefundTransactionSerializer": {
        "properties": {
          "type": {
            "type": "string",
            "const": "refund_transaction",
            "title": "Type",
            "description": "The type identifier for this resource",
            "default": "refund_transaction"
          },
          "platform_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Platform Id",
            "description": "The transaction ID from the payment platform"
          },
          "amount": {
            "$ref": "#/components/schemas/MoneyBag",
            "description": "The refund amount for this transaction"
          },
          "gateway": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Gateway",
            "description": "The payment gateway used for the refund (e.g., 'stripe', 'paypal')"
          }
        },
        "type": "object",
        "required": [
          "amount"
        ],
        "title": "RefundTransaction",
        "description": "RefundTransaction"
      },
      "ResendEmailInput": {
        "properties": {
          "email_type": {
            "$ref": "#/components/schemas/ExternalEmailTypeEnum",
            "description": "The type of email to resend"
          }
        },
        "type": "object",
        "required": [
          "email_type"
        ],
        "title": "ResendEmailInput",
        "description": "Input serializer for reviewing a return group"
      },
      "ReturnGroupSerializer": {
        "properties": {
          "type": {
            "type": "string",
            "const": "return_group",
            "title": "Type",
            "description": "The type identifier for this resource",
            "default": "return_group"
          },
          "id": {
            "type": "integer",
            "title": "Id",
            "description": "Unique identifier for the return group"
          },
          "return_method": {
            "$ref": "#/components/schemas/ReturnMethodEnum",
            "description": "The method used for the return"
          },
          "credit_method": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/CreditMethodEnum"
              },
              {
                "type": "null"
              }
            ],
            "description": "The method used for crediting the customer"
          },
          "created_at": {
            "type": "string",
            "title": "Created At",
            "description": "ISO 8601 timestamp when the return group was created"
          },
          "updated_at": {
            "type": "string",
            "title": "Updated At",
            "description": "ISO 8601 timestamp when the return group was last updated"
          },
          "order": {
            "$ref": "#/components/schemas/OrderSerializer",
            "description": "The associated order for this return group"
          },
          "customer": {
            "$ref": "#/components/schemas/CustomerSerializer",
            "description": "The customer who initiated the return"
          },
          "shipments": {
            "items": {
              "$ref": "#/components/schemas/ShipmentSerializer"
            },
            "type": "array",
            "title": "Shipments",
            "description": "List of shipments associated with the returns in this group"
          },
          "returns": {
            "items": {
              "$ref": "#/components/schemas/ReturnLineItemSerializer"
            },
            "type": "array",
            "title": "Returns",
            "description": "List of individual returns that make up this return group"
          },
          "exchange_line_items": {
            "items": {
              "$ref": "#/components/schemas/ExchangeLineItemSerializer"
            },
            "type": "array",
            "title": "Exchange Line Items",
            "description": "Line items for exchanges if the customer chose to exchange items"
          },
          "refund_transactions": {
            "items": {
              "$ref": "#/components/schemas/RefundTransactionSerializer"
            },
            "type": "array",
            "title": "Refund Transactions",
            "description": "List of refund transactions processed for this return group"
          },
          "suggested_refund": {
            "$ref": "#/components/schemas/SuggestedRefundSerializer",
            "description": "Suggested refund amount and breakdown for this return group"
          }
        },
        "type": "object",
        "required": [
          "id",
          "return_method",
          "created_at",
          "updated_at",
          "order",
          "customer",
          "shipments",
          "returns",
          "exchange_line_items",
          "refund_transactions",
          "suggested_refund"
        ],
        "title": "ReturnGroup",
        "description": "ReturnGroup"
      },
      "ReturnLineItemSerializer": {
        "properties": {
          "type": {
            "type": "string",
            "const": "return_line_item",
            "title": "Type",
            "description": "The type identifier for this resource",
            "default": "return_line_item"
          },
          "id": {
            "type": "integer",
            "title": "Id",
            "description": "Unique identifier for the return"
          },
          "platform_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Platform Id",
            "description": "The return ID from the e-commerce platform"
          },
          "created_at": {
            "type": "string",
            "title": "Created At",
            "description": "ISO 8601 timestamp when the return was created"
          },
          "status": {
            "$ref": "#/components/schemas/InternalReturnStatusEnum",
            "description": "Current status of the return"
          },
          "shipment_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Shipment Id",
            "description": "ID of the associated shipment for this return"
          },
          "platform_line_item_id": {
            "type": "string",
            "title": "Platform Line Item Id",
            "description": "The line item ID from the e-commerce platform"
          },
          "product_platform_id": {
            "type": "string",
            "title": "Product Platform Id",
            "description": "The product ID from the e-commerce platform"
          },
          "product_name": {
            "type": "string",
            "title": "Product Name",
            "description": "The name of the product being returned"
          },
          "variant_platform_id": {
            "type": "string",
            "title": "Variant Platform Id",
            "description": "The variant ID from the e-commerce platform"
          },
          "variant_name": {
            "type": "string",
            "title": "Variant Name",
            "description": "The name of the specific variant being returned"
          },
          "sku": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Sku",
            "description": "The SKU (Stock Keeping Unit) of the item being returned"
          },
          "barcode": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Barcode",
            "description": "The barcode of the item being returned"
          },
          "quantity": {
            "type": "integer",
            "title": "Quantity",
            "description": "The quantity of items being returned"
          },
          "return_reason": {
            "type": "string",
            "title": "Return Reason",
            "description": "The reason provided for the return",
            "deprecated": true
          },
          "return_note": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Return Note",
            "description": "Additional notes provided with the return",
            "deprecated": true
          },
          "return_reason_details": {
            "$ref": "#/components/schemas/ReturnReasonSerializer",
            "description": "The details of the reason provided for the return"
          },
          "questions_answers": {
            "items": {
              "$ref": "#/components/schemas/QuestionAnswerSerializer"
            },
            "type": "array",
            "title": "Questions Answers",
            "description": "The questions and answers provided for the return"
          },
          "subtotal": {
            "$ref": "#/components/schemas/MoneyBag",
            "description": "The subtotal amount before discounts and taxes"
          },
          "discounted_subtotal": {
            "$ref": "#/components/schemas/MoneyBag",
            "description": "The subtotal amount after discounts but before taxes"
          },
          "tax_total": {
            "$ref": "#/components/schemas/MoneyBag",
            "description": "The total tax amount for this return"
          },
          "tax_percentage": {
            "type": "number",
            "title": "Tax Percentage",
            "description": "The tax percentage applied to this return"
          },
          "total": {
            "$ref": "#/components/schemas/MoneyBag",
            "description": "The total amount for this return (including taxes and discounts)"
          }
        },
        "type": "object",
        "required": [
          "id",
          "created_at",
          "status",
          "platform_line_item_id",
          "product_platform_id",
          "product_name",
          "variant_platform_id",
          "variant_name",
          "quantity",
          "return_reason",
          "return_reason_details",
          "questions_answers",
          "subtotal",
          "discounted_subtotal",
          "tax_total",
          "tax_percentage",
          "total"
        ],
        "title": "ReturnLineItem",
        "description": "ReturnLineItem"
      },
      "ReturnMethodEnum": {
        "type": "string",
        "enum": [
          "TRADITIONAL",
          "SELF_SHIP",
          "STORE_DROP_OFF",
          "RETURN_BEAR",
          "HAPPY_RETURNS",
          "GLOBAL_E",
          "ECODROP"
        ],
        "title": "ReturnMethodEnum"
      },
      "ReturnReasonSerializer": {
        "properties": {
          "type": {
            "type": "string",
            "const": "return_reason",
            "title": "Type",
            "description": "The type identifier for this resource",
            "default": "return_reason"
          },
          "value": {
            "type": "string",
            "title": "Value",
            "description": "The reason provided for the return"
          },
          "path": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Path",
            "description": "The path to the reason in reasons tree"
          },
          "note": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Note",
            "description": "Additional notes provided by user for the return"
          }
        },
        "type": "object",
        "required": [
          "value",
          "path",
          "note"
        ],
        "title": "ReturnReason",
        "description": "ReturnReason"
      },
      "ReturnReviewDecisionEnum": {
        "type": "string",
        "enum": [
          "APPROVED",
          "DECLINED",
          "NO_DECISION"
        ],
        "title": "ReturnReviewDecisionEnum"
      },
      "ShipmentSerializer": {
        "properties": {
          "type": {
            "type": "string",
            "const": "shipment",
            "title": "Type",
            "description": "The type identifier for this resource",
            "default": "shipment"
          },
          "id": {
            "type": "integer",
            "title": "Id",
            "description": "Unique identifier for the shipment"
          },
          "status": {
            "$ref": "#/components/schemas/ShipmentStatusEnum",
            "description": "Current status of the shipment"
          },
          "carrier": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Carrier",
            "description": "The shipping carrier (e.g., 'USPS', 'FedEx', 'UPS')"
          },
          "tracking_number": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tracking Number",
            "description": "The tracking number for the shipment"
          },
          "created_at": {
            "type": "string",
            "title": "Created At",
            "description": "ISO 8601 timestamp when the shipment was created"
          },
          "origin_address": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/AddressSerializer"
              },
              {
                "type": "null"
              }
            ],
            "description": "The origin address for the shipment"
          },
          "destination_address": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/AddressSerializer"
              },
              {
                "type": "null"
              }
            ],
            "description": "The destination address for the shipment"
          },
          "shipped_at": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Shipped At",
            "description": "ISO 8601 timestamp when the shipment was shipped"
          },
          "delivered_at": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Delivered At",
            "description": "ISO 8601 timestamp when the shipment was delivered"
          }
        },
        "type": "object",
        "required": [
          "id",
          "status",
          "created_at"
        ],
        "title": "Shipment",
        "description": "Shipment"
      },
      "ShipmentStatusEnum": {
        "type": "string",
        "enum": [
          "DRAFT",
          "CREATED",
          "IN_TRANSIT",
          "DELIVERED",
          "FAILED",
          "CANCELED",
          "UNKNOWN"
        ],
        "title": "ShipmentStatusEnum"
      },
      "ShipmentUpdateSerializer": {
        "properties": {
          "status": {
            "$ref": "#/components/schemas/ShipmentStatusEnum",
            "description": "The status to update the shipment to"
          }
        },
        "type": "object",
        "required": [
          "status"
        ],
        "title": "ShipmentUpdateInput",
        "description": "Shipment Update Input"
      },
      "SubmitReturnGroupReviewInput": {
        "properties": {
          "return_group_id": {
            "type": "integer",
            "title": "Return Group Id",
            "description": "The ID of the return group to review"
          },
          "returns": {
            "items": {
              "$ref": "#/components/schemas/SubmitReturnReviewInput"
            },
            "type": "array",
            "title": "Returns",
            "description": "The returns to review"
          }
        },
        "type": "object",
        "required": [
          "return_group_id",
          "returns"
        ],
        "title": "SubmitReturnGroupReviewInput",
        "description": "Input serializer for reviewing a return group"
      },
      "SubmitReturnReviewInput": {
        "properties": {
          "return_id": {
            "type": "integer",
            "title": "Return Id",
            "description": "The ID of the return to review"
          },
          "review_decision": {
            "$ref": "#/components/schemas/ReturnReviewDecisionEnum",
            "description": "The review decision for the return"
          }
        },
        "type": "object",
        "required": [
          "return_id",
          "review_decision"
        ],
        "title": "SubmitReturnReviewInput",
        "description": "Input serializer for reviewing a single return"
      },
      "SuggestedRefundSerializer": {
        "properties": {
          "type": {
            "type": "string",
            "const": "suggested_refund",
            "title": "Type",
            "description": "The type identifier for this resource",
            "default": "suggested_refund"
          },
          "refund_total": {
            "$ref": "#/components/schemas/MoneyBag",
            "description": "The total suggested refund amount for the return group"
          },
          "return_total": {
            "$ref": "#/components/schemas/MoneyBag",
            "description": "The total value of items being returned"
          },
          "return_tax_total": {
            "$ref": "#/components/schemas/MoneyBag",
            "description": "The total tax amount for returned items"
          },
          "exchange_total": {
            "$ref": "#/components/schemas/MoneyBag",
            "description": "The total value of items being exchanged"
          },
          "exchange_tax_total": {
            "$ref": "#/components/schemas/MoneyBag",
            "description": "The total tax amount for exchanged items"
          }
        },
        "type": "object",
        "required": [
          "refund_total",
          "return_total",
          "return_tax_total",
          "exchange_total",
          "exchange_tax_total"
        ],
        "title": "SuggestedRefund",
        "description": "SuggestedRefund"
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "type": "array",
            "title": "Location"
          },
          "msg": {
            "type": "string",
            "title": "Message"
          },
          "type": {
            "type": "string",
            "title": "Error Type"
          }
        },
        "type": "object",
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "title": "ValidationError"
      },
      "ZowieReturnGroupSerializer": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id",
            "default": 0
          },
          "shop_name": {
            "type": "string",
            "title": "Shop Name",
            "default": ""
          },
          "order_platform_id": {
            "type": "string",
            "title": "Order Platform Id",
            "default": ""
          },
          "order_name": {
            "type": "string",
            "title": "Order Name",
            "default": ""
          },
          "order_created_at": {
            "type": "string",
            "title": "Order Created At",
            "default": ""
          },
          "order_sales_channel": {
            "type": "string",
            "title": "Order Sales Channel",
            "default": ""
          },
          "customer_name": {
            "type": "string",
            "title": "Customer Name",
            "default": ""
          },
          "customer_email": {
            "type": "string",
            "title": "Customer Email",
            "default": ""
          },
          "country": {
            "type": "string",
            "title": "Country",
            "default": ""
          },
          "shipment_status": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Shipment Status"
          },
          "carrier": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Carrier"
          },
          "tracking_number": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tracking Number"
          },
          "return_method": {
            "type": "string",
            "title": "Return Method",
            "default": ""
          },
          "credit_method": {
            "type": "string",
            "title": "Credit Method",
            "default": ""
          },
          "is_exchange": {
            "type": "boolean",
            "title": "Is Exchange",
            "default": false
          },
          "is_instant_exchange": {
            "type": "boolean",
            "title": "Is Instant Exchange",
            "default": false
          },
          "return_subtotal": {
            "$ref": "#/components/schemas/MoneyBag",
            "default": {
              "shop_money": {
                "amount": 0,
                "currency_code": "USD"
              },
              "presentment_money": {
                "amount": 0,
                "currency_code": "USD"
              }
            }
          },
          "return_discounted_subtotal": {
            "$ref": "#/components/schemas/MoneyBag",
            "default": {
              "shop_money": {
                "amount": 0,
                "currency_code": "USD"
              },
              "presentment_money": {
                "amount": 0,
                "currency_code": "USD"
              }
            }
          },
          "return_tax_total": {
            "$ref": "#/components/schemas/MoneyBag",
            "default": {
              "shop_money": {
                "amount": 0,
                "currency_code": "USD"
              },
              "presentment_money": {
                "amount": 0,
                "currency_code": "USD"
              }
            }
          },
          "return_total": {
            "$ref": "#/components/schemas/MoneyBag",
            "default": {
              "shop_money": {
                "amount": 0,
                "currency_code": "USD"
              },
              "presentment_money": {
                "amount": 0,
                "currency_code": "USD"
              }
            }
          },
          "total_refunded": {
            "$ref": "#/components/schemas/MoneyBag",
            "default": {
              "shop_money": {
                "amount": 0,
                "currency_code": "USD"
              },
              "presentment_money": {
                "amount": 0,
                "currency_code": "USD"
              }
            }
          },
          "gift_card_order_ids": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Gift Card Order Ids",
            "default": []
          },
          "returns": {
            "items": {
              "$ref": "#/components/schemas/ZowieReturnSerializer"
            },
            "type": "array",
            "title": "Returns",
            "default": []
          },
          "created_at": {
            "type": "string",
            "title": "Created At",
            "default": "1970-01-01T00:00:00Z"
          },
          "updated_at": {
            "type": "string",
            "title": "Updated At",
            "default": "1970-01-01T00:00:00Z"
          },
          "is_process_allowed": {
            "type": "boolean",
            "title": "Is Process Allowed",
            "default": false
          },
          "is_cancel_allowed": {
            "type": "boolean",
            "title": "Is Cancel Allowed",
            "default": false
          },
          "is_complete_allowed": {
            "type": "boolean",
            "title": "Is Complete Allowed",
            "default": false
          },
          "is_flagged": {
            "type": "boolean",
            "title": "Is Flagged",
            "default": false
          }
        },
        "type": "object",
        "title": "ReturnGroup",
        "description": "`ReturnGroup` model Serializer"
      },
      "ZowieReturnSerializer": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id",
            "default": 0
          },
          "status": {
            "type": "string",
            "title": "Status",
            "default": ""
          },
          "product_platform_id": {
            "type": "string",
            "title": "Product Platform Id",
            "default": ""
          },
          "product_name": {
            "type": "string",
            "title": "Product Name",
            "default": ""
          },
          "variant_platform_id": {
            "type": "string",
            "title": "Variant Platform Id",
            "default": ""
          },
          "variant_name": {
            "type": "string",
            "title": "Variant Name",
            "default": ""
          },
          "line_item_platform_id": {
            "type": "string",
            "title": "Line Item Platform Id",
            "default": ""
          },
          "sku": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Sku"
          },
          "quantity": {
            "type": "integer",
            "title": "Quantity",
            "default": 1
          },
          "shipment_status": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Shipment Status"
          },
          "carrier": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Carrier"
          },
          "tracking_number": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tracking Number"
          },
          "return_reason": {
            "type": "string",
            "title": "Return Reason",
            "default": ""
          },
          "return_note": {
            "type": "string",
            "title": "Return Note",
            "default": ""
          },
          "return_subtotal": {
            "$ref": "#/components/schemas/MoneyBag",
            "default": {
              "shop_money": {
                "amount": 0,
                "currency_code": "USD"
              },
              "presentment_money": {
                "amount": 0,
                "currency_code": "USD"
              }
            }
          },
          "return_discounted_subtotal": {
            "$ref": "#/components/schemas/MoneyBag",
            "default": {
              "shop_money": {
                "amount": 0,
                "currency_code": "USD"
              },
              "presentment_money": {
                "amount": 0,
                "currency_code": "USD"
              }
            }
          },
          "return_tax_total": {
            "$ref": "#/components/schemas/MoneyBag",
            "default": {
              "shop_money": {
                "amount": 0,
                "currency_code": "USD"
              },
              "presentment_money": {
                "amount": 0,
                "currency_code": "USD"
              }
            }
          },
          "return_total": {
            "$ref": "#/components/schemas/MoneyBag",
            "default": {
              "shop_money": {
                "amount": 0,
                "currency_code": "USD"
              },
              "presentment_money": {
                "amount": 0,
                "currency_code": "USD"
              }
            }
          },
          "created_at": {
            "type": "string",
            "title": "Created At",
            "default": "1970-01-01T00:00:00Z"
          },
          "updated_at": {
            "type": "string",
            "title": "Updated At",
            "default": "1970-01-01T00:00:00Z"
          }
        },
        "type": "object",
        "title": "Return",
        "description": "`Return` model Serializer"
      }
    }
  }
}